services:
  sporter_gateway:
    image: nginx:alpine
    container_name: ${PROXY_CONTAINER_NAME}
    networks:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - sporter_api
      - sporter_frontend
    ports:
      - 80:80

  sporter_frontend:
    build:
      context: ${FRONTEND_REPO_DIR}
      dockerfile: ${FRONTEND_DOCKERFILE}
    container_name: ${FRONT_CONTAINER_NAME}
    environment:
      - REQUEST_URL=${API_HOST}
    ports:
      - 3000:3000
    depends_on:
      - sporter_api
    networks:
      - frontend

  sporter_api:
    build: 
      context: ${BACKEND_REPO_DIR}
      dockerfile:  ${BACKEND_DOCKERFILE}
    container_name: ${API_CONTAINER_NAME}
    volumes:
      - ${HOST_FILES_DIR}:${FILES_DIR}
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_DRIVERNAME=${MYSQL_DRIVERNAME}
      - FILES_DIR=${FILES_DIR}
    ports:
      - 5000:5000
    depends_on:
      - sporter_db
    networks:
      - backend

  sporter_db:
    image: mysql:latest
    container_name: ${DB_CONTAINER_NAME}
    volumes:
      - database_volume:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - backend

volumes:
  database_volume:
    external: true
    name: ${API_DATABASE_VOLUME}

networks:
  backend:
  frontend:
